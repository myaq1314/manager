<!doctype html>
<html>
<head>
<meta charset="utf-8">
<title></title>
<script type="text/javascript" src="../../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../../js/utilJs.js"></script>
<script type="text/javascript" src="../../third/js/date/WdatePicker.js"></script>
<link rel="stylesheet" href = "../../css/table.css">
<link rel="stylesheet" href = "../../css/public.css">
<link rel="stylesheet" href = "../../css/relatedAddAssetDetail_zj.css">
<script type="text/javascript" src="../../js/multiselect/jquery.ui.core.js"></script>
<script type="text/javascript" src="../../js/multiselect/jquery.ui.widget.js"></script>
<script type="text/javascript" src="../../js/multiselect/jquery.multiselect.js"></script>
<link rel="stylesheet" type="text/css" href="../../js/multiselect/jquery.multiselect.css" >
<link rel="stylesheet" type="text/css" href="../../js/multiselect/jquery-ui.css" >

<script type="text/javascript">
$(function () {
    // 设置页面的标题
    document.title = '为资产计划添加资产';

    // 隐藏批量操作的按钮
    jqGet("addButton").hide();
    jqGet("addAllButton").hide();

    // 初始化时间输入框
    $('#startDueDate').on('click', function () {
        wdatePicker();
    });

    $('#endDueDate').on('click', function () {
        wdatePicker();
    });

    // 设置多选下拉框
    jqGet("stageNoMultiSelect").multiselect({
        noneSelectedText: "全部",
        checkAllText: "全选",
        uncheckAllText: '清空',
        //header: false,
        selectedList: 10
    });

    // 复位多选按钮
    jsGet('repayCheckAll').checked = true;
    jsGet('repayCheck1').checked = true;
    jsGet('repayCheck2').checked = true;
    jsGet('repayCheck3').checked = true;

    // 获取传递到页面的关联参数
    var str = window.location + '';   // alert( str );
    var arr = str.split('?id=');
    jsGet("apIdForAddToRelatedAssetPlan").value = arr[1];   // alert( arr[1] );
    jsGet("transferStatus").value = 0;

    jqGet("viewLink").attr('href', '/page/assetdetail/findRelatedAssetDetail.html?id=' + arr[1]);

    // 查询 AssetDetail 的相关信息
    ajaxSubmitOfFindAssetDetailWithRelatedInfo();

    ajaxSubmitOfFindRelatedAssetDetail();      // 提交条件查询
});

// 查询 AssetDetail 的相关信息
function ajaxSubmitOfFindAssetDetailWithRelatedInfo() {
    var url = '/assetDetail/findAssetDetailWithRelatedInfo';
    var param = null;
    var callbackFunctionName = "successCallbackOfFindAssetDetailWithRelatedInfo";
    theAjaxSubmit(url, null, callbackFunctionName);
}

function successCallbackOfFindAssetDetailWithRelatedInfo(obj) {
    if (obj.message == "success") {
        var list = obj.ProductTypes;
        if (isNull(list)) {
            msg("没有符合条件的产品类型");
        } else {
            var selectObj = jqGet('productType');   // 获得下拉框
            for (var i = 0; i < list.length; i++) {
                selectObj.append(new Option(list[i].name, list[i].id));
            }
        }
    }
}

// 分页查询翻到某一页。  whichPage 表示翻到第几页
function goToPage(whichPage) {
    var submitFunctionNameStr = 'ajaxSubmitOfFindRelatedAssetDetail';
    setupPagerAndSubmit(whichPage, submitFunctionNameStr);
}

// 校验输入的查询条件
function validateInput() {
    // 校验 累计逾期天数 必须是 0 或 正整数
    var inputName = '累计逾期天数';
    var value = jqGet("overDueDay").val().trim();    // msg(typeof jqGet("overDueDay").val())
    jqGet("overDueDay").val(value);

    if (!isNull(value)) {  // 这个输入参数不是空时，校验格式
        var result = validateZeroOrNumber(value);    // alert(value +"   "+(jqGet("overDueDay").val().trim() === 0) )

        if (result == false) {
            alert(inputName + '必须是 0 或 正整数');
            return false;
        }
    }

    // 校验 时间
    var startDueDateStr = jqGet('startDueDate').val().trim();
    var endDueDateStr = jqGet('endDueDate').val().trim();

    var nameEnd = '最终还款日的结束时间';
    var nameStart = '最终还款日的开始时间';

    if (!isNull(startDueDateStr) && !isNull(endDueDateStr)) {
        var result = compareTimeAWithTimeB(endDueDateStr, startDueDateStr);
        if (result < 0) {
            alert(nameEnd + " 应该大于或等于 " + nameStart);
            return false;
        }
    }

    // 查询时，至少要选中一种还款状态
    if (!areAllUnchecked()) {
        alert('至少要选择一种资产的还款状态');
        return false;
    }

    return true;
}

// 从 form 提交条件查询
function findRelatedAssetDetail() {
    if (validateInput()) {   // 校验输入的数据
        ajaxSubmitOfFindRelatedAssetDetail();
    }
}

// 提交分页的条件查询，查询条件就是 searchForm 中输入的参数
function ajaxSubmitOfFindRelatedAssetDetail(isPagerSearch) {
    var param = serializeForm("searchForm");

    // 处理提交到后台的 还款状态 repayStatusStr 这个查询参数
    var repayStatusCheckbox = document.getElementsByName("repayStatusCheckbox");
    var repayStatusStr = getCheckedStr(repayStatusCheckbox);
    put(param, "repayStatusStr", repayStatusStr);

    // 处理 分期计划 这个参数
    var stageNoMultiSelect = jqGet("stageNoMultiSelect").multiselect("getChecked");
    var stageNoStr = getCheckedStr(stageNoMultiSelect);
    // jqGet("stageNoStr").val(stageNoStr);
    put(param, "stageNoStr", stageNoStr);

    // 如果 没输入 累计逾期天数≤(天) 这个参数，那就不往后台传递这个参数。这样就会查询所有的 累计逾期天数≤(天)
    var inputOverdueDay = jqGet("overDueDay").val().trim();
    if (isNull(inputOverdueDay)) {
        // remove(param, "overDueDay");
        put(param, "overDueDay", -1);
    }

    if (validateInput()) {   // 校验输入的数据
        // 如果是分页查询，需要加上分页参数
        if (isPagerSearch == true){
            put(param, "page", jqGet("page").val());
            put(param, "pageSize", jqGet("pageSize").val());
        }

        var url = '/assetDetail/findAssetDetail';
        var callbackFunctionName = "successCallbackOfFindRelatedAssetDetail";

        theAjaxSubmit(url, param, callbackFunctionName);
    }
}

// 提交条件查询 成功的回调函数
function successCallbackOfFindRelatedAssetDetail(obj){      //printObject( obj );
    if(obj.message == "success") {
        if (obj.count == 0) {
            jqGet("resultlist").html("没查询到资产明细");

            jqGet("addButton").hide();
            jqGet("addAllButton").hide();
        } else {
            jqGet("addButton").show();
            jqGet("addAllButton").show();

            // 列表的表头 参数
            var listTitleParam = {};
            put(listTitleParam, 'loanId', '借据号');
            // put(listTitleParam, 'transferStatus', '转让状态');  // 这个页面查询的都是 未转让 的资产
            put(listTitleParam, 'stageNo', '分期计划');
            put(listTitleParam, 'productType', '产品类型');
            put(listTitleParam, 'loanTime', '放款时间');
            put(listTitleParam, 'creditAmount', '授信额度');
            put(listTitleParam, 'loanRate', '贷款利率（月）');

            // put(listTitleParam, 'loanPrincipalAmount', '贷款本息（元）');
            // put(listTitleParam, 'repayPrincipalInterest', '已还本息（元）');
            // put(listTitleParam, 'surplusPrincipalAmount', '已转让本息（元）');
            put(listTitleParam, 'loanAmount', '贷款本金（元）');
            put(listTitleParam, 'loanFee', '贷款费用（元）');
            put(listTitleParam, 'repayAmount', '已还本金（元）');
            put(listTitleParam, 'repayFee', '已还费用（元）');
            put(listTitleParam, 'transferredAmount', '已转让本金（元）');
            put(listTitleParam, 'transferredFee', '已转让费用（元）');

            put(listTitleParam, 'surplusPrincipalAmount', '剩余本息（元）');

            put(listTitleParam, 'dueDate', '借据最终还款日');
            put(listTitleParam, 'repayStatus', '还款状态');
            put(listTitleParam, 'penaltyInterest', '罚息');
            put(listTitleParam, 'repayPenaltyInterest', '已还罚息');
            put(listTitleParam, 'repayPlanChange', '还款计划是否变更');
            put(listTitleParam, 'repayType', '还款方式');

            put(listTitleParam, 'guaranteeType', '担保类型');
            put(listTitleParam, 'overDueDay', '累计逾期天数');
            put(listTitleParam, 'maxOverDueDay', '历史最高逾期天数');
            put(listTitleParam, 'historyMaxAmount', '历史最高逾期金额');
            put(listTitleParam, 'overDuePrincipal', '逾期本金金额');

            put(listTitleParam, 'overDueInterest', '逾期利息金额');
            put(listTitleParam, 'isDiscount', '是否贴息');
            put(listTitleParam, 'discountBase', '贴息基数');
            put(listTitleParam, 'discountRate', '贴息比例');
            put(listTitleParam, 'amortisementDate', '摊销期限');
            put(listTitleParam, 'amortisementCharge', '应收摊销服务费');

            // put(listTitleParam, 'customerId', '客户 id');
            // put(listTitleParam, 'merchantId', '商户 id');
            // put(listTitleParam, 'corpId', '合作机构 id');
            put(listTitleParam, 'customerName', '客户姓名');
            put(listTitleParam, 'idcard', '客户身份证号');
            put(listTitleParam, 'gender', '客户性别');
            put(listTitleParam, 'age', '客户年龄');
            put(listTitleParam, 'degree', '客户学历');
            put(listTitleParam, 'profession', '客户职业');
            put(listTitleParam, 'area', '客户所在地区');

            put(listTitleParam, 'merchantName', '商户总公司名称');
            put(listTitleParam, 'merchantBranchName', '商户分公司名称');

            put(listTitleParam, 'corpName', '合作机构名称');

            // 列表的格式化函数 的参数
            var formatterParam = {};
            put(formatterParam, 'loanTime', 'emptyStrFormatter');
            put(formatterParam, 'dueDate', 'emptyStrFormatter');
            put(formatterParam, 'amortisementDate', 'emptyStrFormatter');
            put(formatterParam, 'repayStatus', 'repayStatusFormatter');
            put(formatterParam, 'isDiscount', 'isDiscountFormatter');
            put(formatterParam, 'repayPlanChange', 'repayPlanChangeFormatter');
            put(formatterParam, 'productType', 'productTypeFormatter');
            put(formatterParam, 'repayPlanChange', 'repayPlanChangeFormatter');
            // put(formatterParam, 'transferStatus', 'transferStatusFormatter');
            put(formatterParam, 'gender', 'genderFormatter');
            put(formatterParam, 'repayType', 'repayTypeFormatter');

            // 是否需要在列表左侧显示多选按钮列
            var checkboxParam = {};
            put(checkboxParam, "needCheckbox", true);
            put(checkboxParam, "checkboxArg", "loanId");  // checkbox 将这个属性赋值给 checkbox 的 value

            // 功能 那一列相关的参数
            var opColumnParam = getArray();
            opColumnParam.push('generateViewAssetStageLink');

            var sumParam = getObject();
            sumParam.needSn = true;   // 是否显示序号列
            sumParam.count = obj.count;   // 总的查询结果数
            sumParam.page = obj.page;     // 总的查询结果页数
            sumParam.pageSize = obj.pageSize;   // 每页的行数
            sumParam.howManyPages = obj.howManyPages;  // 一共有多少页

            var divId = "resultlist";

            // 生成动态列表
            generateTable(divId, obj.list, listTitleParam, formatterParam,
                    checkboxParam, opColumnParam, sumParam);

            // 设置 分页条，输入框和跳转按钮
            setupPager(sumParam);
        }
    }
}

// 生成 查看 资产明细 中的 资产分期明细 的链接
function generateViewAssetStageLink(item) {  // printObject(item)
    var classToFindEng = 'AssetStageDetail';

    var findRelated =  '<a href="/page/' + classToFindEng.toLowerCase()
        + '/findRelatedAssetStageDetail.html?id=' + item.id
        + '&loanId=' + item.loanId + '">查看资产分期明细</a>';
    return findRelated;
}

// 确认 并 删除记录
function toDeleteAssetDetail(id) {
    var re = confirm('要删除这条资产信息吗？');

    if (re == true) {
        var url = "/assetDetail/deleteAssetDetailInAssetPlan";
        var param = {};
        put(param, "id", id);
        var callbackFunctionName = "successCallbackOfDeleteAssetDetailInAssetPlan";
        theAjaxSubmit(url, param, callbackFunctionName);
    }
}

//删除记录 成功的回调函数
function successCallbackOfDeleteAssetDetailInAssetPlan(obj){
    if(obj.message == "success") {
        var url = '/page/assetdetail/findRelatedAssetDetail.html?id='
                + jqGet('apIdForAddToRelatedAssetPlan').val();
        pageForwardWithoutParam(url);
    }
}

// 将符合条件的资产全部添加到资产计划
function addAllAssetDetailToAssetPlan(){
    var re = confirm('要将符合条件的资产全部添加到资产计划吗？');

    if (re == true) {
        var param = serializeForm("searchForm");

        // 处理提交到后台的 还款状态 repayStatusStr 这个查询参数
        var repayStatusCheckbox = document.getElementsByName("repayStatusCheckbox");
        var repayStatusStr = getCheckedStr(repayStatusCheckbox);
        put(param, "repayStatusStr", repayStatusStr);

        // 处理 分期计划 这个参数
        var stageNoMultiSelect = jqGet("stageNoMultiSelect").multiselect("getChecked");
        var stageNoStr = getCheckedStr(stageNoMultiSelect);
        // jqGet("stageNoStr").val(stageNoStr);
        put(param, "stageNoStr", stageNoStr);

        // 如果 没输入 累计逾期天数≤(天) 这个参数，那就不往后台传递这个参数。这样就会查询所有的 累计逾期天数≤(天)
        var inputOverdueDay = jqGet("overDueDay").val().trim();
        if (isNull(inputOverdueDay)) {
            // remove(param, "overDueDay");
            put(param, "overDueDay", -1);
        }
     //   printObject( param );  return;
        if (validateInput()) {   // 校验输入的数据
            var apId = jqGet('apIdForAddToRelatedAssetPlan').val();
            var url = '/assetDetail/addAllAssetDetailToAssetPlan';
            put(param, 'apIdParam', apId);                     // printObject(param)
            var callbackFunctionName = 'successCallbackOfBatchAddAssetDetailToAssetPlan';

            theAjaxSubmit(url, param, callbackFunctionName);
        }
    }
}

// 批量添加记录
function batchAddAssetDetailToAssetPlan(){
    var checkboxes = document.getElementsByName("checkbox");
    var originalIds = getCheckedStr(checkboxes);

    if (originalIds === '') {
        alert('请先选择数据');
        return;
    }else{
        var apId = jqGet('apIdForAddToRelatedAssetPlan').val();
        var url = '/assetDetail/batchAddAssetDetailToAssetPlan';
        var param = {};
        put(param, 'ids', originalIds);
        put(param, 'apId', apId);
        //post( url, param );
        var callbackFunctionName = 'successCallbackOfBatchAddAssetDetailToAssetPlan';

        theAjaxSubmit(url, param, callbackFunctionName);
    }
}

// 批量添加资产 成功的回调函数
function successCallbackOfBatchAddAssetDetailToAssetPlan(obj){
    if(obj.message === 'success') {
        pageForwardWithoutParam('/page/assetdetail/findRelatedAssetDetail.html?id='
                   + jqGet('apIdForAddToRelatedAssetPlan').val());
    }
}

// 全选多选按钮
function repayCheckAllFunction() {
    var flag = jsGet('repayCheckAll').checked;

    var arr = document.getElementsByName("repayStatusCheckbox");

    for (var i = 0; i < arr.length; i++) {
        if (flag == true) {
            arr[i].checked = true;
        } else {
            arr[i].checked = false;
        }
    }
}

//至少要查询一种还款状态
function areAllUnchecked() {
    var flag = false;
    var arr = document.getElementsByName('repayStatusCheckbox');

    for (var i = 0; i < arr.length; i++) {
        if (arr[i].checked == true) {
            flag = true;
        }
    }

    if (flag == false) {
        return false;
    } else {
        return true;
    }
}

// 多选按钮的处理
function repayCheckOut(obj) {
    var statusOfThis = obj.checked;

    // 判断是否选中 “全选” 按钮
    var checkFlag = true;
    var arr = document.getElementsByName('repayStatusCheckbox');

    for (var i = 0; i < arr.length; i++) {
        if (arr[i].checked == false) {
            checkFlag = false;
        }
    }

    if (checkFlag == false) {
        jsGet('repayCheckAll').checked = false;
    } else {
        jsGet('repayCheckAll').checked = true;
    }
}

// 清空查询所有的条件
function resetInput() {
    resetForm('searchForm');
    jsGet('repayCheckAll').checked = true;
    jsGet('repayCheck1').checked = true;
    jsGet('repayCheck2').checked = true;
    jsGet('repayCheck3').checked = true;
}
</script>
</head>
<body>
<div class="tap">
    <ul>
        <li>
            <a href="/">首页</a>
        </li>
        <li>
            <a href="/page/assetplan/findAssetPlan.html">资产计划列表</a>
        </li>
        <li>
            <a id="viewLink" href="">查看这个计划中的资产</a>
        </li>
    </ul>
</div>
<div class="tap-title"><font size="4">为资产计划添加资产</font></div>
<input type="hidden" id="apIdForAddToRelatedAssetPlan">
<form id="searchForm" method="post" class="form-table">
<!-- 查询所有 transferStatus=0 也就是 未转让的 资产 -->
<input type="hidden" name="transferStatus"  id="transferStatus"  value="0" >

<div class="tr-one">
<!--     <span>
        <label for="hh">剩余还款天数(天):</label>
        <input type="text" id="hh" name="hh" class="input"> 
    </span>
    <span>
        <label for="ff">已还款期数:</label>
        <select name="ff" id="ff" class="select">
            <option value="">全部</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
            <option value="7">7</option>
            <option value="8">8</option>
            <option value="9">9</option>
            <option value="10">10</option>
            <option value="11">11</option>
            <option value="12">12</option>
            <option value="13">13</option>
            <option value="14">14</option>
            <option value="15">15</option>
            <option value="16">16</option>
            <option value="17">17</option>
            <option value="18">18</option>
            <option value="19">19</option>
            <option value="20">20</option>
            <option value="21">21</option>
            <option value="22">22</option>
            <option value="23">23</option>
            <option value="24">24</option>
        </select>
    </span> -->
    <span>
        <label for="overDueDay">累计逾期天数≤(天):</label>
        <input type="text" id="overDueDay" name="overDueDay" class="input"> 
    </span>
    <span>
        <label for="merchantBranchName">商户分公司名称:</label>
        <input type="text" id="merchantBranchName" name="merchantBranchName" class="input"> 
    </span>
    <span>
        <label for="productType">账户产品类型:</label>
        <select name="productType" id="productType" class="select">
            <option value="">全部</option>
        </select>
    </span>
    <span>
        <label class="select-label"  for="stageNoMultiSelect" >分期计划:</label>
        <input type="hidden" name="stageNoStr" id="stageNoStr" >
        <select multiple="multiple" id ="stageNoMultiSelect"  size="7" class="select">
            <option value="1">1</option>
            <option value="3">3</option>
            <option value="6">6</option>
            <option value="12">12</option>
            <option value="16">16</option>
            <option value="18">18</option>
            <option value="24">24</option>
            <option value="36">36</option>
        </select>
    </span>
</div>
<div class="tr-one">
<!--     <span>
        <label for="dd">历史逾期次数≤(次):</label>
        <input type="text" id="dd" name="dd" class="input"> 
    </span> -->
    <span>
        <label for="dueDate">借据最终还款日期:</label>
        <input type="text" id="startDueDate" name="startDueDate" class="wdate"> - 
        <input type="text" id="endDueDate" name="endDueDate" class="wdate">
    </span>
    <div class="fl-one">
        <table>
            <tr>
                <td width="105"  class="text-left"></td>
                <td width="115"  class="text-left">资产的还款状态:</td>
                <td>
                    <input type="checkbox" id="repayCheckAll" onclick="repayCheckAllFunction()" > 全选 &nbsp;&nbsp;&nbsp;   
                    <input type="checkbox" id="repayCheck1" name="repayStatusCheckbox" onclick="repayCheckOut(this)" value="N" > 正常
                    <input type="checkbox" id="repayCheck2" name="repayStatusCheckbox" onclick="repayCheckOut(this)" value="Y" > 结清
                    <input type="checkbox" id="repayCheck3" name="repayStatusCheckbox" onclick="repayCheckOut(this)" value="O" > 逾期
                </td>
            </tr>
        </table>
    </div>
</div>
<!-- <div class="tr-one">
     <span>
        <label for="dd">历史逾期次数≤(次):</label>
        <input type="text" id="dd" name="dd" class="input"> 
    </span>
</div> -->

<div class="buttons">
<input type="button" value="查找" onclick="findRelatedAssetDetail()" class="button">
<input type="button" value="清空" onclick="resetInput()" class="button mid">
<input id="addButton" class="button-two" type="button" value="添加选中的资产"
                onclick="batchAddAssetDetailToAssetPlan()">
&nbsp;                
<input id="addAllButton" class="button-two" type="button" value="添加符合条件的资产"
                onclick="addAllAssetDetailToAssetPlan()">                
</div>

</form>
<div id="resultlist"></div>
</body>
</html>